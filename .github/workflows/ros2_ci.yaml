name: ROS2 Humble CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up ROS2 Humble
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y

      - name: Fix Python packaging versions
        run: |
          pip install --upgrade pip
          pip install setuptools==69.5.1 packaging==24.0 colcon-common-extensions==0.3.0
          pip install flake8 pytest pytest-cov pytest-repeat pytest-rerunfailures

      - name: Build ROS2 workspace
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --event-handlers console_direct+

      - name: Run tests
        run: |
          source install/setup.bash
          colcon test --event-handlers console_direct+
          colcon test-result --verbose || true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/**/test_results/**/*.xml

  # ---------------------
  # SIMULATION TEST JOB
  # ---------------------
  simulation:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up ROS2 Humble
        uses: ros-tooling/setup-ros@v0.7
        with:
          required-ros-distributions: humble

      - name: Install simulation dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y ros-humble-gazebo-ros-pkgs ros-humble-xacro
          rosdep update
          rosdep install --from-paths src --ignore-src -r -y

      - name: Source workspace
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --event-handlers console_direct+
          source install/setup.bash

      - name: Run headless Gazebo test
        run: |
          echo "Launching Gazebo in headless mode..."
          gzserver --verbose &   # start in background
          sleep 5
          if pgrep gzserver > /dev/null; then
            echo "✅ Gazebo launched successfully!"
            pkill gzserver
          else
            echo "❌ Gazebo failed to start!"
            exit 1
          fi
